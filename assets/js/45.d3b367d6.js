(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{566:function(e,t,r){"use strict";r.r(t);var a=r(22),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"一、vue定义及简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、vue定义及简介"}},[e._v("#")]),e._v(" 一、Vue定义及简介")]),e._v(" "),r("h3",{attrs:{id:"_1、vue定义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、vue定义"}},[e._v("#")]),e._v(" 1、Vue定义")]),e._v(" "),r("p",[e._v("  关于Vue简介，百度百科给出的解释是：Vue.js是一套构建用户界面的渐进式框架。与其他重量级框架不同的是，Vue 采用自底向上增量开发的设计。Vue 的核心库只关注视图层，并且非常容易学习，非常容易与其它库或已有项目整合。另一方面，Vue 完全有能力驱动采用单文件组件和Vue生态系统支持的库开发的复杂单页应用。")]),e._v(" "),r("p",[e._v("  Vue.js 是一个提供了 MVVM 风格双向数据绑定的 Javascript 库（无依赖别的js库，直接引入一个js文件就可以使用，跟jquery差不多），专注于View 层。它的核心是 MVVM 中的 VM，也就是 ViewModel。 ViewModel负责连接 View 和 Model，保证视图和数据的一致性，这种轻量级的架构让前端开发更加高效、便捷。")]),e._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/xiaoxianer321/article/details/111560355",target:"_blank",rel:"noopener noreferrer"}},[e._v("我的博客原文地址"),r("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=s.exports}}]);